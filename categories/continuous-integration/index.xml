<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Continuous Integration on Sohan's Blog</title><link>http://smsohan.com/categories/continuous-integration/</link><description>Recent content in Continuous Integration on Sohan's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 04 Oct 2011 00:00:00 +0000</lastBuildDate><atom:link href="http://smsohan.com/categories/continuous-integration/index.xml" rel="self" type="application/rss+xml"/><item><title>Nightly Build is a Warning (or Horror)</title><link>http://smsohan.com/blog/2011/10/04/nightly-build-is-warning-or-horror/</link><pubDate>Tue, 04 Oct 2011 00:00:00 +0000</pubDate><guid>http://smsohan.com/blog/2011/10/04/nightly-build-is-warning-or-horror/</guid><description>Photo credits:&amp;nbsp;insidethemagic
I think, Nightly build is an anti-pattern for Continuous Integration. If you are integrating continuously, then you shouldn't need a nightly build, that would be too discrete :(
If you already have a per-commit continuous integration setup, you shouldn't need the so called nightly build unless there's something bad about the code.
Often times, builds taking &amp;gt;10 minutes are put in the bucket of nightly builds.
Some people put batch processing related tests under such nightly builds.</description></item><item><title>CruiseControl.Net (CCNet) configuration example for NCover</title><link>http://smsohan.com/blog/2008/09/06/cruisecontrolnet-ccnet-configuration/</link><pubDate>Sat, 06 Sep 2008 00:00:00 +0000</pubDate><guid>http://smsohan.com/blog/2008/09/06/cruisecontrolnet-ccnet-configuration/</guid><description>CruiseControl.Net is a great continuous integration tool for .Net projects. It not only continuously builds your software but provides some really helpful reports to monitor your project's progress.
In agile world, we all speak of self-testing code or test driven development (TDD). If we really want to ensure our code has enough test coverage, we need to use some tool to ease our lives and NCover is a good one for this purpose.</description></item></channel></rss>